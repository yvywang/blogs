{"pages":[],"posts":[{"title":"ts 泛型","text":"概述我们经常在编写函数时，不仅要支持目前定义的数据类型，同时也要能支持未来的数据类型场景下，泛型可以给你想要的约束。","link":"/blogs/2021/12/15/2021/ts-generics/"},{"title":"husky 使用总结","text":"概述在规范一个项目中，一般都需要操作 git hooks 来达到一些需求， 如规范日志，或检查代码格式 ，本文将介绍使用 husky来实现这一需求。 介绍它在过去的 husky 配置 git hooks 是在我们项目 package.json 中配置。 如下： 12345678{ &quot;husky&quot;: { &quot;hooks&quot;: { &quot;pre-commit&quot;: &quot;npm run test&quot;, &quot;commit-msg&quot;: &quot;commitlint -e $HUSKY_GIT_PARAMS&quot; } }} 为什么它会是过去， husky 为什么放弃这种配置方式，原因如下 ⬇️ husky 为了能够让用户设置任何类型的 git hooks 能正常工作，它就必须要创建所有类型的 git hooks ，这样就能在 git 工作的每个阶段中调用 husky 所设置的脚本， 这个脚本会检查用户是否配置了该 hook ,如果有就会执行用户配置的命令，没有就继续往下执行。 这么做的好处就是任何类型的 hook 都能符合预期的运行，但是缺点也是非常明显，即使用户没有设置任何 hook , husky 也向 git 添加了所有类型的 git hooks。 作者认为这个问题是由于 husky 工作模型的自身缺陷导致的, 要解决只能采用新的工作模型。 新版的 husky 工作原理husky 使用了 git 2.9 开始引入的其中一个新功能core.hooksPath. 它可以指定 git hooks 所在的目录而不是使用默认的 .git/hooks/。 这样的话 husky 就可以将目录部署到自己的 .husky/ 然后使用 husky add 在 .husky/ 目录添加 hook。通过这种方式我们就可以只添加需要的, 并且所有脚本都保存在同一个地方，也就不存在同步文件的问题。 实践 安装 husky 1npm install -D husky package.json 添加 prepare 脚本； 12345{ &quot;scripts&quot;: { &quot;prepare&quot;: &quot;husky install&quot; }} prepare 会在 npm install （不带参数） 之后执行。 husky install 会将.husky/目录指定该目录为 git hooks 所在的目录。 执行下面命令创建 pre-commit git hooks 1npx husky add .husky/pre-commit &quot;npm run test&quot; 执行完会发现 .husky/pre-commit 多了这个shell 脚本，那么现在执行 git commit 命令前会先执行 pre-commit 这个脚本。 举例 在项目中我们会使用 commit-msg 这个git hook 来检查提交的备注信息是否符合规范。 执行如下命令创建 commit-msg hook 使用 commitlint 检查 12345npm install -g @commitlint/cli @commitlint/config-conventionalecho &quot;module.exports = {extends: ['@commitlint/config-conventional']}&quot; &gt; commitlint.config.jsnpx husky add .husky/commit-msg 'npx --no-install commitlint --edit &quot;$1&quot;'","link":"/blogs/2022/03/02/2022/husky/"},{"title":"Markdown 基本语法","text":"概述本文将介绍 Markdown 基本使用语法。 标题语法创建标题时，在单词或短语前添加 # 号， # 号的数量代表了当前标题的级别，例如, ### 即表示创建一个三级标题 &lt;h3 /&gt; Markdown Html preview # Heading level 1 &lt;h1&gt;Heading level 1&lt;/h1&gt; Heading level 1 ## Heading level 2 &lt;h2&gt;Heading level 2&lt;/h2&gt; Heading level 2 ### Heading level 3 &lt;h3&gt;Heading level 3&lt;/h3&gt; Heading level 3 #### Heading level 4 &lt;h4&gt;Heading level 4&lt;/h4&gt; Heading level 4 ##### Heading level 5 &lt;h5&gt;Heading level 5&lt;/h5&gt; Heading level 5 强调语法通过更改文本字体样式来凸显其重点。 粗体 (Bold)加粗文本有两种方式，在单词或短语的前后各添加两个 * 或 _ 。需要注意的是，Markdown 在如何处理单词或短语中间的下划线并不一致，考虑其兼容性，在单词或短语中间部分加粗的话，请使用 *。 Markdown Html preview I just test **bold text** I just test &lt;strong&gt;bold text&lt;/strong&gt; I just test bold text I just test __bold text__ I just test &lt;strong&gt;bold text&lt;/strong&gt; I just test bold text test **bold** text test &lt;strong&gt;bold&lt;/strong&gt; text test bold text 斜体 (Ltalic)同上粗体一样写法，区别在于前后只需要一个 * 或 _ 裹住，同建议使用 * 引用语法创建块引用，在段落前添加一个 &gt; 符号。 1&gt; Dorothy followed her through many of the beautiful rooms in her castle. 效果如下： Dorothy followed her through many of the beautiful rooms in her castle. 多个段落的块引用块引用可以包含多个段落。 为段落之间的空白行添加 &gt; 符号隔开。 123&gt; Dorothy followed her through many of the beautiful rooms in her castle.&gt;&gt; Dorothy followed her through many of the beautiful rooms in her castle. 效果如下： Dorothy followed her through many of the beautiful rooms in her castle. Dorothy followed her through many of the beautiful rooms in her castle. 嵌套块引用块引用可以嵌套。在需要嵌套的段落基于自身的的 &gt; 前多加一个 &gt;。 123&gt; Dorothy followed her through many of the beautiful rooms in her castle.&gt;&gt;&gt; Dorothy followed her through many of the beautiful rooms in her castle. 效果如下： Dorothy followed her through many of the beautiful rooms in her castle. Dorothy followed her through many of the beautiful rooms in her castle. 列表语法可以将多个条目组织成有序或无序列表。 有序列表创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。 无序列表创建无序列表，在每个列表项前添加 -、*、+ 三选一。 缩进一个或多个列表可嵌套列表。 最佳实践在列表中嵌套其他元素 123456* This is the first list item.* Here's the second list item. &gt; A blockquote would look great below the second list item.* And here's the third list item. 效果如下： This is the first list item. Here’s the second list item. A blockquote would look great below the second list item. And here’s the third list item. 代码预览语法要将语句以代码风格展示，需要将其包裹 `。 例如： 123```Javascriptconst log = 'Hello World'``` 效果如下： 1const log = 'Hello World' 分割线创建分割线，有三种写法，在单独一行上使用多个 *** 、 ---、 ___ 三选一，并且分割线当前行不能包含其他内容。 12345***_______------------- 效果如下： 链接语法链接显示的文案放在中括号内，地址放在括号中，title可选。语法代码：[文案](地址 &quot;可选title&quot;)对应HTML代码：&lt;a href=&quot;地址&quot; title=&quot;可选title&quot;&gt;文案&lt;/a&gt; 1链接： [blogs](https://yvywang.github.io/blogs/ &quot;hover me&quot;) 效果如下链接： blogs 网址和Email地址使用尖括号可以很方便地把URL或者email地址变为可点击的链接 12&lt;https://yvywang.github.io/blogs/&gt;&lt;fake@example.com&gt; 效果如下：https://yvywang.github.io/blogs/fake@example.com 带格式化的链接强调 链接， 在链接语法前后加上 *。要将链接表示为代码，在方括号添加 ` 123I love supporting the **[EFF](https://eff.org)**.This is the *[blogs](https://yvywang.github.io/blogs/)*.See the section on [`code`](#code). I love supporting the EFF.This is the blogs.See the section on code. 图片语法要添加图片的展示，需要使用 ! , 然后在中括号添加替代文案，图片地址放在圆括号，其后面有可选的title图片标题文案插入图片的 Markdown 语法：![图片alt](图片链接 &quot;图片title&quot;)。对应的 HTML：&lt;img src=&quot;图片链接&quot; alt=&quot;图片alt&quot; title=&quot;图片title&quot;&gt; 带超链接的图片给图片增加链接，拥有跳转的特性，在语法外多加一层中括号，最后面多加一个括号填写超链接地址[![图片alt](图片链接 &quot;图片title&quot;)](https://yvywang.github.io/blogs/)","link":"/blogs/2022/02/28/2022/markdown-basic/"},{"title":"Markdown 扩展语法","text":"概述基本语法主要是为了应付大多数情况下的日常所需元素，但对于个别人群来说还不够，这就是扩展语法的用武之地，本文将介绍它的使用。 表格要添加表请使用三个或以上连字符 --- 创建每列的标题，并使用管道 ｜ 分隔每列。您可以选择在表的任一端添加管道。 1234| Syntax | Description || --------- | ----------- || Header | Title || Paragraph | Text | 输出如下：| Syntax | Description || ——— | ———– || Header | Title || Paragraph | Text | 对齐标题行的连字符 左侧，右侧，两侧 中添加冒号 : ，将列中的文本对齐到 左侧， 右侧， 或居中。 1234| Syntax | Description | Test Text || :-------- | :---------: | ----------: || Header | Title | Here's this || Paragraph | Text | And more | 输出如下： | Syntax | Description | Test Text | | :——– | :———: | ———-: | | Header | Title | Here’s this | | Paragraph | Text | And more | Tip: 使用连字符和管道创建表可能很麻烦，为了高效可以尝试使用 Markdown Tables Generator。使用图形界面构建表，填充内容后生成 Markdown 格式的文本复制到文件中。 围栏代码块Markdown基本语法允许您使用一个制表符来创建代码块。如果发现不方便，请尝试使用受保护的代码块。根据 Markdown处理器或编辑器的不同，您将在代码块之前和之后的行上使用三个反引号 ``` 或三个波浪号 ~~~ 。 1234567```{ &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25}``` 输出如下: 12345{ &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25} Tip: 要在代码块展示特殊符号，请参阅了解如何转义它们。 语法高亮许多Markdown处理器都支持受围栏代码块的语法突出显示。使用此功能，您可以为编写代码的任何语言添加颜色突出显示。要添加语法突出显示，请在受防护的代码块之前的反引号旁边指定一种语言。 1234567```json{ &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25}``` 输出如下: 12345{ &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25} 脚注脚注可以让你添加注释和参考，而不会使文档正文混乱。当您创建脚注时，带有脚注的上标数字会出现在您添加脚注参考的位置。读者可以单击链接以跳至脚注内容区域。 要创建脚注参考，请在语句中插入 [^1] 标识符。这里的 1 就是标识符，标识符可以是数字或单词。脚注按顺序编号。 使用冒号和文本 [^1]: my text 来添加你脚注参考的内容。 不必在文档末尾添加脚注，可以将它们放在除了列表，块引号，表之类的其他元素之外的任何位置。 1234567891011Here's a simple footnote,[^1] and here's a longer one.[^bignote][^1]: This is the first footnote.[^bignote]: Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. `{ my code }` Add as many paragraphs as you like. 标题编号有时候我们想要点击一个关键词，跳到对应的内容区域查看，定义标题编号后使用 Markdown的链接语法可以实现这个需求。 12### My Great Heading {#custom-id}[Heading](#custom-id) 定义列表一些Markdown处理器允许您创建术语及其对应定义的定义列表。要创建定义列表，请在第一行上键入术语。在下一行，键入一个冒号，后跟一个空格和定义。 123456First Term: This is the definition of the first term.Second Term: This is one definition of the second term.: This is another definition of the second term. HTML 看起来像这样 1234567&lt;dl&gt; &lt;dt&gt;First Term&lt;/dt&gt; &lt;dd&gt;This is the definition of the first term.&lt;/dd&gt; &lt;dt&gt;Second Term&lt;/dt&gt; &lt;dd&gt;This is one definition of the second term. &lt;/dd&gt; &lt;dd&gt;This is another definition of the second term.&lt;/dd&gt;&lt;/dl&gt; 输出如下： First TermThis is the definition of the first term.Second Term: This is one definition of the second term.This is another definition of the second term.删除线在单词前后使用两个波浪号 1~~Hello World~~ 输出如下：Hello World 任务列表语法要创建带复选框的项目列表，需要在列表项前添加破折号 - 和 方括号 [ ] ，选中复选框状态请在方括号添加 x, 如 [x]。 1234- [x] Write the press release- [ ] Update the website- [ ] Contact the media 输出如下： Write the press release Update the website Contact the media Emoji 表情有两种方法可以将表情符号添加到Markdown文件中：将表情符号复制并粘贴到Markdown格式的文本中，或者键入emoji shortcodes。 在大多数情况下，可以简单地从 Emojipedia 等来源复制表情粘贴到文档中。 使用表情符号简码一些 Markdown 应用程序允许你通过键入表情符号短代码来插入表情。 1you're so funny :joy: 输出如下： you’re so funny :joy:; Tip: 你可以使用此表情符号简码, 但需要注意的是，简码解析因程序而异。 自动网址链接许多Markdown处理器会自动将URL转换为链接。这意味着如果您输入http://www.example.com，即使您未使用方括号，您的Markdown处理器也会自动将其转换为链接。 http://www.example.com 输出如下：http://www.example.com 禁用自动URL链接如果您比希望自动链接URL，则可以通过反引号代码来显示链接。 1`http://www.example.com` 输出如下：http://www.example.com","link":"/blogs/2022/03/03/2022/markdown-extand/"}],"tags":[{"name":"TypeScript","slug":"TypeScript","link":"/blogs/tags/TypeScript/"},{"name":"husky","slug":"husky","link":"/blogs/tags/husky/"},{"name":"Markdown","slug":"Markdown","link":"/blogs/tags/Markdown/"}],"categories":[]}